# -*- coding: utf-8 -*-
"""graph_analysis_dfs.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v2yPViOCxG0hY6lB_4ovO2Re6tU3wi6C
"""

import json

from backend.initial_api_test import TEST_COLLECTION, get_sales, TransactionGraph

def dfs(graph, start, end):
    fringe = [(start, [])]
    while fringe:
        state, path = fringe.pop()
        if path and state == end:
            yield path
            continue
        for next_state in graph[state]:
            if next_state in path:
                continue
            fringe.append((next_state, path+[next_state]))

graph = TransactionGraph(get_sales(TEST_COLLECTION))
cycles = [[node]+path  for node in graph for path in dfs(graph, node, node)]